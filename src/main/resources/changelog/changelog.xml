<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

    <changeSet id="4" author="mond">
        <createTable tableName="AUTHOR">
            <column name="id" type="int" autoIncrement="true" incrementBy="1" startWith="1000" >
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="FIRST_NAME" type="varchar2(100)">
                <constraints nullable="false"/>
            </column>
            <column name="SECOND_NAME" type="varchar2(100)">
                <constraints nullable="false"/>
            </column>
            <column name="CREATE_DATE" type="DATETIME" valueDate="sysdate" defaultValueComputed="sysdate">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet id="11" author="mond">
        <createTable tableName="BOOK">
            <column name="id" type="int" autoIncrement="true" incrementBy="1" startWith="1000" >
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="ISBN" type="int">
                <constraints unique="true" nullable="false"/>
            </column>
            <column name="NAME" type="varchar2(400)">
                <constraints nullable="false"/>
            </column>
            <column name="PUBLISHER" type="varchar2(100)">
                <constraints nullable="false"/>
            </column>
            <column name="PUBLISH_YEAR" type="varchar2(5)">
                <constraints nullable="false"/>
            </column>
            <column name="CREATE_DATE" type="DATETIME" valueDate="sysdate" defaultValueComputed="sysdate">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet id="211" author="mond">
        <createSequence
                cycle="false"
                incrementBy="1"
                maxValue="99999999999"
                minValue="1"
                ordered="true"
                schemaName="c##MOND"
                sequenceName="BOOK_PK_SEQ"
                startValue="1000"/>
    </changeSet>

    <changeSet id="212" author="mond">
        <createSequence
                cycle="false"
                incrementBy="1"
                maxValue="99999999999"
                minValue="1"
                ordered="true"
                schemaName="c##MOND"
                sequenceName="AUTHOR_PK_SEQ"
                startValue="1000"/>
    </changeSet>

    <changeSet id="213" author="mond">
        <createSequence
                cycle="false"
                incrementBy="1"
                maxValue="99999999999"
                minValue="1"
                ordered="true"
                schemaName="c##MOND"
                sequenceName="REVIEW_PK_SEQ"
                startValue="1000"/>
    </changeSet>

    <changeSet id="14" author="mond">
        <createTable tableName="JOIN_BOOK_AUTHOR">
            <column name="author_id" type="int" >
                <constraints nullable="false"/>
            </column>
            <column name="book_id" type="int">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet author="mond" id="15">
        <addForeignKeyConstraint baseColumnNames="author_id"
                                 baseTableName="JOIN_BOOK_AUTHOR"
                                 constraintName="author_id"
                                 deferrable="true"
                                 initiallyDeferred="true"
                                 onDelete="CASCADE"
                                 onUpdate="RESTRICT"
                                 referencedColumnNames="ID"
                                 referencedTableName="AUTHOR"/>

        <addForeignKeyConstraint baseColumnNames="book_id"
                                 baseTableName="JOIN_BOOK_AUTHOR"
                                 constraintName="book_id"
                                 deferrable="true"
                                 initiallyDeferred="true"
                                 onDelete="CASCADE"
                                 onUpdate="RESTRICT"
                                 referencedColumnNames="ID"
                                 referencedTableName="BOOK"/>
    </changeSet>


    <changeSet id="47" author="mond">
        <createTable tableName="REVIEWS">
            <column name="ID" type="int" autoIncrement="true" incrementBy="1" startWith="1000" >
                <constraints primaryKey="true" nullable="false"/>
            </column>

            <column name="COMMENTER_NAME" type="varchar2(100)">
                <constraints nullable="false"/>
            </column>

            <column name="COM" type="text">
                <constraints nullable="true"/>
            </column>

            <column name="RATING" type="int">
                <constraints nullable="false"/>
            </column>

            <column name="CREATE_DATE" type="DATETIME" valueDate="sysdate" defaultValueComputed="sysdate">
                <constraints nullable="false"/>
            </column>

            <column name="ID_BOOK" type="int">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet author="mond" id="48">
        <addForeignKeyConstraint baseColumnNames="ID_BOOK"
                                 baseTableName="REVIEWS"
                                 constraintName="ID_BOOK_C"
                                 deferrable="true"
                                 onDelete="CASCADE"
                                 onUpdate="RESTRICT"
                                 initiallyDeferred="true"
                                 referencedColumnNames="ID"
                                 referencedTableName="BOOK"/>
    </changeSet>

    <changeSet id="50" author="mond">
        <addColumn tableName="BOOK">
            <column name="AVERAGE_RATING" type="float">
                <constraints nullable="true"/>
            </column>
        </addColumn>

        <addColumn tableName="AUTHOR">
            <column name="AVERAGE_RATING" type="float">
                <constraints nullable="true"/>
            </column>
        </addColumn>
    </changeSet>

    <changeSet id="300" author="me">
        <sql endDelimiter="/">
            create or replace package package_pk is
            type saved_id is table of number;
            book_pk number;
            end package_pk;
            /
        </sql>
    </changeSet>

    <changeSet id="320" author="me">
        <sql endDelimiter="/">
            create or replace FUNCTION GET_AVG_RATING_BY_BOOK
            (
            PARAM1 IN NUMBER
            ) RETURN NUMBER IS average_book_rating NUMBER(11,2);
            BEGIN
                SELECT AVG(rating) INTO average_book_rating FROM REVIEWS WHERE id_book = PARAM1;
            RETURN (average_book_rating);
            END GET_AVG_RATING_BY_BOOK;
            /
        </sql>
    </changeSet>

    <changeSet id="318" author="me">
        <sql endDelimiter="/">
            create or replace PROCEDURE GET_AVG
            (
            PID IN NUMBER
            ) IS
            CURSOR author_to_update IS SELECT A.ID FROM Author A WHERE A.ID IN (SELECT AB.AUTHOR_ID FROM JOIN_BOOK_AUTHOR AB WHERE AB.BOOK_ID = PID);
            BEGIN
                UPDATE BOOK B SET
                B.AVERAGE_RATING = GET_AVG_RATING_BY_BOOK(PID)
                WHERE B.ID = PID;
                FOR update_author_id IN author_to_update LOOP
                    UPDATE Author A SET A.AVERAGE_RATING = (SELECT AVG(B.AVERAGE_RATING) FROM BOOK B WHERE B.ID IN (SELECT BOOK_ID FROM JOIN_BOOK_AUTHOR AB WHERE AB.AUTHOR_ID = update_author_id.ID)) WHERE A.ID = update_author_id.ID;
                    EXIT WHEN author_to_update%NOTFOUND;
                END LOOP;
            END GET_AVG;
            /
        </sql>
    </changeSet>

    <changeSet id="317" author="me">
        <sql endDelimiter="/">
            create or replace TRIGGER BEFORE_REVIEW_SAVE_BOOK_PK_TRG
            BEFORE INSERT OR UPDATE OR DELETE ON REVIEWS
            FOR EACH ROW
            DECLARE
            var number;
            BEGIN
                case
                when inserting then
                package_pk.book_pk:=0;
                var:=:new.id_book;
                package_pk.book_pk:=var;
                when deleting then
                package_pk.book_pk:=0;
                var:=:old.id_book;
                package_pk.book_pk:=var;
                end case;
            NULL;
            END;
            /
        </sql>
    </changeSet>


    <changeSet id="316" author="me">
        <sql endDelimiter="/">
            create or replace TRIGGER ON_AFTER_REVIEWS_INSERT_TRG
            AFTER INSERT OR DELETE ON REVIEWS
            DECLARE
            book_var_id number;
            BEGIN
                book_var_id:=PACKAGE_PK.book_pk;
                GET_AVG(book_var_id);
            NULL;
            END;
            /
        </sql>
    </changeSet>

    <changeSet id="305" author="me">
        <sql endDelimiter="/">
            create or replace TRIGGER CHANGE_A_B_RELATION
            FOR DELETE OR INSERT ON JOIN_BOOK_AUTHOR
            COMPOUND TRIGGER
            type t_num is table of AUTHOR.ID%type
            index by binary_integer;
            emps t_num;
            id_a number;
            author_count integer;
            BEFORE STATEMENT IS
            BEGIN
            NULL;
            END BEFORE STATEMENT;

            BEFORE EACH ROW IS
            BEGIN
                case
                when inserting then
                emps (emps.count + 1) := :new.author_id;
                when deleting then
                emps (emps.count + 1) := :old.author_id;
                end case;
            NULL;
            END BEFORE EACH ROW;

            AFTER STATEMENT IS
            BEGIN
                forall e in emps.FIRST .. emps.LAST
                UPDATE AUTHOR A SET A.AVERAGE_RATING = (SELECT AVG(B.AVERAGE_RATING) FROM BOOK B WHERE B.ID IN (SELECT BOOK_ID FROM JOIN_BOOK_AUTHOR AB WHERE AB.AUTHOR_ID = emps(e))) WHERE A.ID = emps(e);
            NULL;
            END AFTER STATEMENT;
            END CHANGE_A_B_RELATION;
            /
        </sql>
    </changeSet>

</databaseChangeLog>
